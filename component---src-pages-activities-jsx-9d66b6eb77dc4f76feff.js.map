{"version":3,"sources":["webpack:///./src/styles/Link.module.css","webpack:///./src/styles/SectionHeader.module.css","webpack:///./src/components/PageTitle.jsx","webpack:///./src/styles/PageTitle.module.css","webpack:///./src/components/Layout.jsx","webpack:///./src/components/SectionHeader.jsx","webpack:///./src/styles/Section.module.css","webpack:///./src/styles/ActivityListItem.module.css","webpack:///./src/components/ActivityListItem.jsx","webpack:///./src/components/Section.jsx","webpack:///./src/pages/activities.jsx","webpack:///./src/components/Link.jsx","webpack:///./src/styles/Layout.module.css"],"names":["module","exports","PageTitle","children","className","style","title","Layout","React","stalkerStyles","setStalkerStyles","handleMousemove","e","transition","opacity","transform","clientX","clientY","handleTouchstart","preventDefault","document","addEventListener","passive","removeEventListener","content","lang","name","body","stalker","ji","SectionHeader","header","ActivityListItem","item","source","category","link","key","tag","Link","href","Section","section","CATEGORIES","formatRepo","repo","node","isArchived","url","pubDate","Date","createdAt","formatQiitaPost","post","created_at","formatFeedItem","formatConnpassEvent","event_url","started_at","Activities","data","filter","setFilter","handleFilter","target","value","now","lim","getFullYear","getMonth","itemsByMonth","items","ret","year","month","forEach","unshift","push","reverse","factorSortedItemsByMonth","allGithubData","edges","repositoryOwner","repositories","map","allQiitaPost","allFeedNote","allFeedSpeakerdeck","allFeedSoundcloud","allFeedZenn","allFeedYouTube","allFeedScrapbox","allConnpassEvents","nodes","sort","a","b","Emoji","rotate","to","onChange","onBlur","rel"],"mappings":"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","file":"component---src-pages-activities-jsx-9d66b6eb77dc4f76feff.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Link-module--link--QCiO2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"SectionHeader-module--header--1hT-s\"};","import * as React from \"react\";\nimport style from '../styles/PageTitle.module.css';\n\nconst PageTitle = ({ children }) => {\n    return (\n        <h1 className={ style.title }>\n          { children }\n        </h1>\n    );\n};\n\nexport default PageTitle;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"PageTitle-module--title--7-iW0\"};","import * as React from \"react\";\nimport style from \"../styles/Layout.module.css\";\nimport { Helmet } from 'react-helmet';\nimport Emoji from '../components/Emoji.jsx';\n\nconst Layout = ({ title, children }) => {\n    const [stalkerStyles, setStalkerStyles] = React.useState({});\n    const handleMousemove = (e) => {\n        setStalkerStyles({\n            transition: \"opacity 0.3s\",\n            opacity: 1,\n            transform: `translate(${e.clientX}px, ${e.clientY}px)`,\n        });\n    };\n    const handleTouchstart = (e) => {\n        e.preventDefault();\n    };\n    React.useEffect(() => {\n        document.addEventListener('mousemove', handleMousemove, { passive: true });\n        document.addEventListener('touchstart', handleTouchstart, { passive: true });\n        return () => {\n            document.removeEventListener('mousemove', handleMousemove);\n            document.removeEventListener('touchstart', handleTouchstart);\n        }\n    }, []);\n    return (\n        <main className={ style.content }>\n          <Helmet>\n            <html lang=\"ja\" />\n            <title>{ title }</title>\n            <meta name=\"Description\" content=\"zk-phi „ÅÆ„Éõ„Éº„É†„Éö„Éº„Ç∏„Åß„Åô\" />\n            <body className={ style.body } />\n          </Helmet>\n          <div style={ stalkerStyles } className={ style.stalker }>\n            <Emoji ji=\"ü¶Ñ\" />\n          </div>\n          { children }\n        </main>\n    );\n};\n\nexport default Layout;\n","import * as React from \"react\";\nimport style from '../styles/SectionHeader.module.css';\n\nconst SectionHeader = ({ children }) => {\n    return (\n        <h2 className={ style.header }>\n          { children }\n        </h2>\n    );\n};\n\nexport default SectionHeader;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section-module--section--Mz3kW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"source\":\"ActivityListItem-module--source--xzMbR\",\"tag\":\"ActivityListItem-module--tag--29YCU\"};","import * as React from \"react\";\nimport style from \"../styles/ActivityListItem.module.css\";\nimport Link from \"./Link.jsx\";\n\nconst ActivityListItem = ({ item: { source, category, title, link } }) => {\n    return (\n        <li key={ link }>\n          <div>\n            <span className={ style.tag }>{ category }</span>\n            <span className={ style.source }>{ source }</span>\n          </div>\n          <div>\n            <Link href={ link }>{ title }</Link>\n          </div>\n        </li>\n    );\n};\n\nexport default ActivityListItem;\n","import * as React from \"react\";\nimport style from \"../styles/Section.module.css\";\n\nconst Section = ({ children }) => {\n    return (\n        <section className={ style.section }>\n          { children }\n        </section>\n    );\n};\n\nexport default Section;\n","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from '../components/Layout.jsx';\nimport Link from '../components/Link.jsx';\nimport Emoji from \"../components/Emoji.jsx\";\nimport PageTitle from '../components/PageTitle.jsx';\nimport ActivityListItem from \"../components/ActivityListItem.jsx\";\nimport Section from \"../components/Section.jsx\";\nimport SectionHeader from \"../components/SectionHeader.jsx\";\n\nconst CATEGORIES = [\n    \"OSS\",\n    \"„ÉÜ„ÉÉ„ÇØË®ò‰∫ã\",\n    \"Ë∂£Âë≥Ë®ò‰∫ã\",\n    \"„Ç§„Éô„É≥„Éà\",\n    \"„É°„É¢\",\n    \"„Åù„ÅÆ‰ªñ\",\n];\n\nconst formatRepo = ({ node: repo }) => (\n    !repo.isArchived && {\n        source: \"GitHub\",\n        category: \"OSS\",\n        title: repo.name,\n        link: repo.url,\n        pubDate: new Date(repo.createdAt),\n    }\n);\n\nconst formatQiitaPost = ({ node: post }) => (\n    {\n        source: \"Qiita\",\n        category: \"„ÉÜ„ÉÉ„ÇØË®ò‰∫ã\",\n        title: post.title,\n        link: post.url,\n        pubDate: new Date(post.created_at),\n    }\n);\n\nconst formatFeedItem = (source, category) => ({ node: item }) => (\n    {\n        source: source,\n        category: category,\n        title: item.title,\n        link: item.link,\n        pubDate: new Date(item.pubDate),\n    }\n);\n\nconst formatConnpassEvent = (item) => (\n    {\n        source: \"connpass\",\n        category: \"„Ç§„Éô„É≥„Éà\",\n        title: item.title,\n        link: item.event_url,\n        pubDate: new Date(item.started_at),\n    }\n);\n\nconst factorSortedItemsByMonth = (items) => {\n    if (!items) return [];\n\n    const ret = [{\n        year: items[0].pubDate.getFullYear(),\n        month: items[0].pubDate.getMonth(),\n        items: [],\n    }];\n    items.forEach((item) => {\n        const year = item.pubDate.getFullYear();\n        const month = item.pubDate.getMonth();\n        if (year !== ret[0].year || month !== ret[0].month) {\n            ret.unshift({ year, month, items: [] });\n        }\n        ret[0].items.push(item);\n    });\n\n    return ret.reverse();\n};\n\nconst Activities = ({ data }) => {\n    const [filter, setFilter] = React.useState(\"\");\n\n    const handleFilter = (e) => {\n        setFilter(e.target.value);\n    };\n\n    const now = new Date();\n    const lim = new Date(now.getFullYear(), now.getMonth() - 12);\n\n    const items = [\n        ...data.allGithubData.edges[0].node.data.repositoryOwner.repositories.edges.map(formatRepo),\n        ...data.allQiitaPost.edges.map(formatQiitaPost),\n        ...data.allFeedNote.edges.map(formatFeedItem(\"note\", \"Ë∂£Âë≥Ë®ò‰∫ã\")),\n        ...data.allFeedSpeakerdeck.edges.map(formatFeedItem(\"Speakerdeck\", \"Ë∂£Âë≥Ë®ò‰∫ã\")),\n        ...data.allFeedSoundcloud.edges.map(formatFeedItem(\"Soundcloud\", \"„Åù„ÅÆ‰ªñ\")),\n        ...data.allFeedZenn.edges.map(formatFeedItem(\"Zenn\", \"„ÉÜ„ÉÉ„ÇØË®ò‰∫ã\")),\n        ...data.allFeedYouTube.edges.map(formatFeedItem(\"YouTube\", \"„Åù„ÅÆ‰ªñ\")),\n        ...data.allFeedScrapbox.edges.map(formatFeedItem(\"Scrapbox\", \"„É°„É¢\")),\n        ...data.allConnpassEvents.nodes.map(formatConnpassEvent),\n    ].filter((item) => (\n        item && item.pubDate >= lim && (!filter || filter === item.category)\n    )).sort((a, b) => a.pubDate < b.pubDate ? 1 : -1);\n\n    const itemsByMonth = factorSortedItemsByMonth(items);\n\n    return (\n        <Layout title=\"zk-phi „ÅÆÈÉ®Â±ã :: ÊúÄËøë„ÅÆÊ¥ªÂãï\">\n          <PageTitle><Emoji ji=\"üíª\" rotate /> ÊúÄËøë„ÅÆÊ¥ªÂãï <Emoji ji=\"üíª\" rotate /></PageTitle>\n\n          <p>\n            Áõ¥ËøëÔºëÂπ¥„ÅÆÈñì„Å´ÂÖ¨Èñã„Åó„Åü„Éï„É™„Éº„ÇΩ„Éï„Éà„ÉªÊñáÊõ∏„Å™„Å©„Çí„Åæ„Å®„ÇÅ„Åæ„Åó„Åü„ÄÇ\n          </p>\n\n          <p>\n            <Link to=\"/\">&lt; Êàª„Çã</Link>\n          </p>\n\n          <hr />\n\n          <p>\n            Áµû„ÇäËæº„ÇÄ: <select value={ filter } onChange={ handleFilter } onBlur={ handleFilter }>\n            <option value=\"\">ÂÖ®„Å¶</option>\n            { CATEGORIES.map((category) => (\n                <option key={ category } value={ category }>{ category }</option>\n            )) }\n            </select>\n          </p>\n\n          { itemsByMonth.map((month) => (\n              <Section key={ month.year * 12 + month.month }>\n                <SectionHeader>{ `${month.year} ${month.month + 1}Êúà` }</SectionHeader>\n                <ul>\n                  { month.items.map((item) => (\n                      <ActivityListItem key={ item.link } item={ item } />\n                  )) }\n                </ul>\n              </Section>\n            ))}\n\n          <hr />\n\n          <p>\n            <Link to=\"/\">&lt; Êàª„Çã</Link>\n          </p>\n        </Layout>\n    );\n}\n\nexport default Activities;\n\nexport const query = graphql`\n    query {\n        allGithubData {\n            edges {\n                node {\n                    data {\n                        repositoryOwner {\n                            repositories {\n                                edges {\n                                    node {\n                                        createdAt\n                                        name\n                                        url\n                                        isArchived\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        allQiitaPost {\n            edges {\n                node {\n                    title\n                    url\n                    created_at\n                }\n            }\n        }\n        allFeedNote {\n            edges {\n                node {\n                    title\n                    link\n                    pubDate\n                }\n            }\n        }\n        allFeedSpeakerdeck {\n            edges {\n                node {\n                    title\n                    link\n                    pubDate\n                }\n            }\n        }\n        allFeedSoundcloud {\n            edges {\n                node {\n                    title\n                    link\n                    pubDate\n                }\n            }\n        }\n        allFeedZenn {\n            edges {\n                node {\n                    title\n                    link\n                    pubDate\n                }\n            }\n        }\n        allFeedYouTube {\n            edges {\n                node {\n                    title\n                    link\n                    pubDate\n                }\n            }\n        }\n        allConnpassEvents {\n            nodes {\n                title\n                event_url\n                started_at\n            }\n        }\n        allFeedScrapbox {\n            edges {\n                node {\n                    title\n                    link\n                    pubDate\n                }\n            }\n        }\n    }\n`;\n","import * as React from \"react\";\nimport { Link as GatsbyLink } from \"gatsby\";\nimport style from \"../styles/Link.module.css\";\n\nconst Link = ({ href, to, children }) => {\n    if (href) {\n        return (\n            <a target=\"_blank\" rel=\"noreferrer\" href={ href } className={ style.link }>\n              { children }\n            </a>\n        );\n    } else {\n        return (\n            <GatsbyLink to={ to } className={ style.link }>\n              { children }\n            </GatsbyLink>\n        )\n    }\n}\n\nexport default Link;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Layout-module--body--3E_xS\",\"content\":\"Layout-module--content--1dZlZ\",\"stalker\":\"Layout-module--stalker--zkodV\"};"],"sourceRoot":""}