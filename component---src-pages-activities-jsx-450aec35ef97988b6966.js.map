{"version":3,"sources":["webpack:///./src/styles/Link.module.css","webpack:///./src/utils/DateFormat.jsx","webpack:///./src/components/PageTitle.jsx","webpack:///./src/styles/PageTitle.module.css","webpack:///./src/components/Layout.jsx","webpack:///./src/pages/activities.jsx","webpack:///./src/components/Link.jsx","webpack:///./src/styles/Layout.module.css"],"names":["module","exports","Intl","DateTimeFormat","PageTitle","children","className","style","title","Layout","content","lang","name","body","formatRepo","repo","node","source","category","link","url","pubDate","Date","createdAt","formatQiitaPost","post","created_at","formatFeedItem","item","formatConnpassEvent","event_url","started_at","Activities","data","React","filter","setFilter","handleFilter","e","target","value","lim","setMonth","getMonth","items","allGithubData","edges","repositoryOwner","repositories","map","allQiitaPost","allFeedNote","allFeedSpeakerdeck","allFeedSoundcloud","allFeedZenn","allFeedYouTube","allConnpassEvents","nodes","ji","to","onChange","onBlur","sort","a","b","key","href","DateFormat","format","Link","rel"],"mappings":"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","file":"component---src-pages-activities-jsx-450aec35ef97988b6966.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Link-module--link--QCiO2\"};","export default new Intl.DateTimeFormat('ja-JP');\n","import * as React from \"react\";\nimport style from '../styles/PageTitle.module.css';\n\nconst PageTitle = ({ children }) => {\n    return (\n        <h1 className={ style.title }>\n          { children }\n        </h1>\n    );\n};\n\nexport default PageTitle;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"PageTitle-module--title--7-iW0\"};","import * as React from \"react\";\nimport style from \"../styles/Layout.module.css\";\nimport { Helmet } from 'react-helmet';\n\nconst Layout = ({ title, children }) => {\n    return (\n        <main className={ style.content }>\n          <Helmet>\n            <html lang=\"ja\" />\n            <title>{ title }</title>\n            <meta name=\"Description\" content=\"zk-phi のホームページです\" />\n            <body className={ style.body } />\n          </Helmet>\n          { children }\n        </main>\n    );\n};\n\nexport default Layout;\n","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from '../components/Layout.jsx';\nimport Link from '../components/Link.jsx';\nimport Emoji from \"../components/Emoji.jsx\";\nimport PageTitle from '../components/PageTitle.jsx';\nimport DateFormat from '../utils/DateFormat.jsx';\n\nconst formatRepo = ({ node: repo }) => ({\n    source: \"GitHub\",\n    category: \"tech\",\n    title: repo.name,\n    link: repo.url,\n    pubDate: new Date(repo.createdAt),\n});\n\nconst formatQiitaPost = ({ node: post }) => ({\n    source: \"Qiita\",\n    category: \"tech\",\n    title: post.title,\n    link: post.url,\n    pubDate: new Date(post.created_at),\n});\n\nconst formatFeedItem = (source, category) => ({ node: item }) => ({\n    source: source,\n    category: category,\n    title: item.title,\n    link: item.link,\n    pubDate: new Date(item.pubDate),\n});\n\nconst formatConnpassEvent = (item) => ({\n    source: \"connpass\",\n    category: \"event\",\n    title: item.title,\n    link: item.event_url,\n    pubDate: new Date(item.started_at),\n});\n\nconst Activities = ({ data }) => {\n    const [filter, setFilter] = React.useState(\"\");\n\n    const handleFilter = (e) => {\n        setFilter(e.target.value);\n    };\n\n    const lim = new Date();\n    lim.setMonth(lim.getMonth() - 6);\n\n    const items = [\n        ...data.allGithubData.edges[0].node.data.repositoryOwner.repositories.edges.map(formatRepo),\n        ...data.allQiitaPost.edges.map(formatQiitaPost),\n        ...data.allFeedNote.edges.map(formatFeedItem(\"note\", \"hobby\")),\n        ...data.allFeedSpeakerdeck.edges.map(formatFeedItem(\"Speakerdeck\", \"hobby\")),\n        ...data.allFeedSoundcloud.edges.map(formatFeedItem(\"Soundcloud\", \"hobby\")),\n        ...data.allFeedZenn.edges.map(formatFeedItem(\"Zenn\", \"tech\")),\n        ...data.allFeedYouTube.edges.map(formatFeedItem(\"YouTube\", \"hobby\")),\n        ...data.allConnpassEvents.nodes.map(formatConnpassEvent),\n    ].filter((item) => item.pubDate >= lim && (!filter || filter === item.category));\n\n    return (\n        <Layout title=\"zk-phi の部屋 :: 最近の活動\">\n          <PageTitle><Emoji ji=\"💻\"/> 最近の活動 <Emoji ji=\"💻\"/></PageTitle>\n\n          <p>\n            直近半年の間に公開したフリーソフト・文書などをまとめました。\n          </p>\n\n          <p>\n            <Link to=\"/\">&lt; 戻る</Link>\n          </p>\n\n          <hr />\n\n          <p>\n            絞り込む: <select value={ filter } onChange={ handleFilter } onBlur={ handleFilter }>\n            <option value=\"\">全て</option>\n            <option value=\"tech\">テック</option>\n            <option value=\"hobby\">趣味</option>\n            <option value=\"event\">イベント参加</option>\n            </select>\n          </p>\n\n          <ul>\n            { items.sort((a, b) => a.pubDate <  b.pubDate ? 1 : -1).map((item) => (\n                <li key={ item.link }>\n                  [{ item.source }]\n                  <Link href={ item.link }>{ item.title }</Link>\n                  ({ DateFormat.format(item.pubDate) })\n                </li>\n            )) }\n          </ul>\n\n          <hr />\n\n          <p>\n            <Link to=\"/\">&lt; 戻る</Link>\n          </p>\n        </Layout>\n    );\n}\n\nexport default Activities;\n\nexport const query = graphql`\n    query {\n        allGithubData {\n            edges {\n                node {\n                    data {\n                        repositoryOwner {\n                            repositories {\n                                edges {\n                                    node {\n                                        createdAt\n                                        name\n                                        url\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        allQiitaPost {\n            edges {\n                node {\n                    title\n                    url\n                    created_at\n                }\n            }\n        }\n        allFeedNote {\n            edges {\n                node {\n                    title\n                    link\n                    pubDate\n                }\n            }\n        }\n        allFeedSpeakerdeck {\n            edges {\n                node {\n                    title\n                    link\n                    pubDate\n                }\n            }\n        }\n        allFeedSoundcloud {\n            edges {\n                node {\n                    title\n                    link\n                    pubDate\n                }\n            }\n        }\n        allFeedZenn {\n            edges {\n                node {\n                    title\n                    link\n                    pubDate\n                }\n            }\n        }\n        allFeedYouTube {\n            edges {\n                node {\n                    title\n                    link\n                    pubDate\n                }\n            }\n        }\n        allConnpassEvents {\n            nodes {\n                title\n                event_url\n                started_at\n            }\n        }\n    }\n`;\n","import * as React from \"react\";\nimport { Link as GatsbyLink } from \"gatsby\";\nimport style from \"../styles/Link.module.css\";\n\nconst Link = ({ href, to, children }) => {\n    if (href) {\n        return (\n            <a target=\"_blank\" rel=\"noreferrer\" href={ href } className={ style.link }>\n              { children }\n            </a>\n        );\n    } else {\n        return (\n            <GatsbyLink to={ to } className={ style.link }>\n              { children }\n            </GatsbyLink>\n        )\n    }\n}\n\nexport default Link;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Layout-module--body--3E_xS\",\"content\":\"Layout-module--content--1dZlZ\"};"],"sourceRoot":""}